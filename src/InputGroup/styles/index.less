@import '../../styles/common';
@import '../../Form/styles/mixin';
@import '../../Button/styles/index';

//
// Input groups
// --------------------------------------------------

// Base styles
// -------------------------
.rs-input-group {
  position: relative; // For dropdowns
  display: flex;
  border-radius: @input-border-radius;
  transition: @input-transition;
  width: 100%;
  cursor: text;
  color: var(--rs-text-primary);
  border: 1px solid var(--rs-border-primary);
  overflow: hidden;

  .high-contrast-mode({
    transition: none;
  });

  &:not(.rs-input-group-disabled):hover,
  &:not(.rs-input-group-disabled).rs-input-group-focus,
  &:focus-within {
    border-color: var(--rs-input-focus-border);
  }

  &:not(.rs-input-group-disabled).rs-input-group-focus,
  &:focus-within {
    .focus-ring();
  }

  & & {
    outline: none !important;
    border-color: transparent !important;
  }

  .rs-input-number,
  .rs-input-group-addon,
  .rs-input-group-btn,
  .rs-picker-date .rs-picker-toggle {
    border: none;
    border-radius: 0;
    outline: none;
  }

  // Reset border
  &:not(.rs-input-group-inside) {
    .rs-input {
      border: none;
      border-radius: 0;
      outline: none;
    }

    .rs-input-number:not(:last-child) .rs-input-number {
      &-btn-group-vertical {
        border-radius: 0;
      }

      &-touchspin-up {
        border-top-right-radius: 0;
      }

      &-touchspin-down {
        border-bottom-right-radius: 0;
      }
    }

    .rs-input-number:not(:first-child) .rs-input {
      border-radius: 0 !important;
    }
  }

  > .rs-input,
  > .rs-form-control-wrapper {
    flex: 1 1 auto;
  }

  .rs-form-control-wrapper > .rs-input {
    width: 100%;
  }

  > .rs-input {
    // Ensure that the input is always above the *appended* addon button for
    // proper border colors.
    position: relative;
  }

  &.rs-input-group-inside {
    width: 100%;
    background-color: var(--rs-input-bg);

    .rs-input {
      display: block;
      width: 100%;
      border: none;
      outline: none;
    }

    .rs-input-group-btn,
    .rs-input-group-addon {
      flex: 0 0 auto;
      width: auto;
    }

    .rs-input-group-btn {
      .rs-btn-subtle();
      padding: unset;

      color: inherit;
      .reset-inside-input-group-btn-size(base);

      &:focus {
        outline: none;
      }
    }

    .rs-input-group-addon {
      top: 0;
      background: none;
      border: none;
    }

    // If the input has an element on the left, remove the left padding
    .rs-input:not(:first-child) {
      padding-left: 0;
    }

    // If the input has an element on the right, remove the right padding
    .rs-input:not(:last-child) {
      padding-right: 0;
    }
  }
}

.rs-input-group.rs-input-group-disabled {
  background-color: var(--rs-input-disabled-bg);
  color: var(--rs-text-disabled);
  cursor: not-allowed;

  .rs-input,
  .rs-input-group-btn,
  .rs-input-group-addon {
    color: inherit;
  }
}

// Sizing options
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

//Reset Input size
.rs-input-group-lg {
  > .rs-input {
    .input-lg();
  }

  .reset-input-group-children-size(large);
}

.rs-input-group-md {
  > .rs-input {
    .input-md();
  }

  .reset-input-group-children-size(base);
}

.rs-input-group-sm {
  > .rs-input {
    .input-sm();
  }

  .reset-input-group-children-size(small);
}

.rs-input-group-xs {
  > .rs-input {
    .input-xs();
  }

  .reset-input-group-children-size(extra-small);
}

// Reset input group addon size.
.rs-input-group.rs-input-group-lg > .rs-input-group-addon {
  font-size: @font-size-large;

  .reset-input-group-addon-size(large);
}

.rs-input-group.rs-input-group-md > .rs-input-group-addon {
  font-size: @font-size-base;

  .reset-input-group-addon-size(base);
}

.rs-input-group.rs-input-group-sm > .rs-input-group-addon {
  font-size: @font-size-base;

  .reset-input-group-addon-size(small);
}

.rs-input-group.rs-input-group-xs > .rs-input-group-addon {
  font-size: @font-size-small;

  .reset-input-group-addon-size(extra-small);
}

// Reset inside input group button size.
.rs-input-group-inside.rs-input-group-lg > .rs-input-group-btn {
  .reset-inside-input-group-btn-size(large);
}

.rs-input-group-inside.rs-input-group-md > .rs-input-group-btn {
  .reset-inside-input-group-btn-size(base);
}

.rs-input-group-inside.rs-input-group-sm > .rs-input-group-btn {
  .reset-inside-input-group-btn-size(small);
}

.rs-input-group-inside.rs-input-group-xs > .rs-input-group-btn {
  .reset-inside-input-group-btn-size(extra-small);
}

// Display as table-cell
// -------------------------
.rs-input-group-addon,
.rs-input-group-btn,
.rs-input-group:not(.rs-input-group-inside) .rs-input {
  &:not(:first-child):not(:last-child) {
    border-radius: 0;
  }
}

// Addon and addon wrapper for buttons
// Text input groups
// -------------------------
.rs-input-group-addon {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  white-space: nowrap;
  vertical-align: middle; // Match the inputs
  color: var(--rs-text-primary);
  font-size: @font-size-base;
  font-weight: normal;
  line-height: 1;
  text-align: center;
  background-color: var(--rs-btn-default-bg);
  border: 1px solid var(--rs-border-primary);
  border-radius: @input-border-radius;

  // Sizing
  &.rs-input-sm {
    padding: @padding-y-sm @padding-x-sm;
    font-size: @font-size-small;
    border-radius: @input-border-radius;
  }

  &.rs-input-xs {
    padding: @padding-x-xs @padding-x-xs;
    font-size: @font-size-small;
    border-radius: @input-border-radius;
  }

  &.rs-input-lg {
    padding: @padding-y-lg @padding-x-lg;
    font-size: @font-size-large;
    border-radius: @input-border-radius;
  }

  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type='radio'],
  input[type='checkbox'] {
    margin-top: 0;
  }
}

// Button input groups
// -------------------------
.rs-input-group-btn {
  position: relative;
  // Jankily prevent input button groups from wrapping with `white-space` and
  // `font-size` in combination with `inline-block` on buttons.
  //font-size: 0;
  line-height: 1;
  white-space: nowrap;
  border-radius: 0;

  // Negative margin for spacing, position for bringing hovered/focused/actived
  // element above the siblings.
  > .rs-btn {
    position: relative;

    + .rs-btn {
      margin-left: -1px;
    }
  }

  // Negative margin to only have a 1px border between the two
  &:first-child {
    > .rs-btn,
    > .rs-btn-group {
      margin-right: -1px;
      border-right: medium none;
    }
  }

  &:last-child {
    > .rs-btn,
    > .rs-btn-group {
      margin-left: -1px;
    }
  }
}
