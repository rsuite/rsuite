@use '../../../styles/base' as base;
@use '../../../styles/themes' as themes;
@use '../../../styles/variables' as vars;

// Define breakpoints map
$breakpoints: (
  xs: vars.$screen-sm,
  sm: vars.$screen-md,
  md: vars.$screen-lg,
  lg: vars.$screen-xl,
  xl: vars.$screen-xxl
);

// Box base selector
[data-rs='box'] {
  // Define radius variables
  --rs-box-rounded-xs: var(--rs-radius-xs);
  --rs-box-rounded-sm: var(--rs-radius-sm);
  --rs-box-rounded-md: var(--rs-radius-md);
  --rs-box-rounded-lg: var(--rs-radius-lg);
  --rs-box-rounded-xl: var(--rs-radius-xl);
  --rs-box-rounded-full: var(--rs-radius-full);

  // Define shadow variables
  --rs-box-shadow-xs: var(--rs-shadow-xs);
  --rs-box-shadow-sm: var(--rs-shadow-sm);
  --rs-box-shadow-md: var(--rs-shadow-md);
  --rs-box-shadow-lg: var(--rs-shadow-lg);
  --rs-box-shadow-xl: var(--rs-shadow-xl);
}

// Generate responsive visibility styles
@each $key, $value in $breakpoints {
  $bp: calc(#{$value} - 1px);

  // Visible from breakpoint
  @media (max-width: $bp) {
    [data-visible-from='#{$key}'] {
      display: none !important;
    }
  }

  // Hidden from breakpoint
  @media (min-width: #{$value}) {
    [data-hidden-from='#{$key}'] {
      display: none !important;
    }
  }
}
