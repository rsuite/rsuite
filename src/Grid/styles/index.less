@import '../../styles/common.less';
@import './mixin.less';
@import './grid-framework.less';
@import './variables.less';
@import './row.less';
@import './columns.less';

//
// Grid system
// --------------------------------------------------

// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.rs-grid-container {
  --rs-grid-gutter-width: calc(var(--rs-spacing) * 3);
  --rs-grid-container-sm: calc(540px + var(--rs-grid-gutter-width));
  --rs-grid-container-md: calc(720px + var(--rs-grid-gutter-width));
  --rs-grid-container-lg: calc(960px + var(--rs-grid-gutter-width));
  --rs-grid-container-xl: calc(1140px + var(--rs-grid-gutter-width));
  --rs-grid-container-xxl: calc(1320px + var(--rs-grid-gutter-width));

  .container-fixed();

  @media (min-width: @screen-sm) {
    width: var(--rs-grid-container-sm);
  }

  @media (min-width: @screen-md) {
    width: var(--rs-grid-container-md);
  }

  @media (min-width: @screen-lg) {
    width: var(--rs-grid-container-lg);
  }

  @media (min-width: @screen-xl) {
    width: var(--rs-grid-container-xl);
  }

  @media (min-width: @screen-xxl) {
    width: var(--rs-grid-container-xxl);
  }
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.rs-grid-container-fluid {
  .container-fixed();
}

// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

.make-grid(xs);

// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets / phones.

@media (min-width: @screen-sm) {
  .make-grid(sm);
}

@media (min-width: @screen-md) {
  .make-grid(md);
}

@media (min-width: @screen-lg) {
  .make-grid(lg);
}

@media (min-width: @screen-xl) {
  .make-grid(xl);
}

@media (min-width: @screen-xxl) {
  .make-grid(xxl);
}

// Hiddens
//
// All hidden styles.

@media (max-width: (@screen-sm - 1)) {
  .hidden(xs);
}

@media (min-width: @screen-sm) and (max-width: (@screen-md - 1)) {
  .hidden(sm);
}

@media (min-width: @screen-md) and (max-width: (@screen-lg - 1)) {
  .hidden(md);
}

@media (min-width: @screen-lg) and (max-width: (@screen-xl - 1)) {
  .hidden(lg);
}

@media (min-width: @screen-xl) and (max-width: (@screen-xxl - 1)) {
  .hidden(xl);
}

@media (min-width: @screen-xxl) {
  .hidden(xxl);
}
