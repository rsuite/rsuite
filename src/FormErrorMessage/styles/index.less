@import '../../styles/common.less';
@import './animation.less';

// Mixins for common arrow styles
.arrow-base() {
  &::before,
  &::after {
    content: '';
    position: absolute;
    border-color: transparent;
    border-style: solid;
  }
}

.arrow-position(@position, @offset) {
  &::before,
  &::after {
    @{position}: @offset;
  }
}

.arrow-border(@direction, @w1, @w2, @w3, @position, @offset) {
  &::before,
  &::after {
    border-width: @w1 @w2 @w3;
    border-@{direction}-color: var(--rs-form-errormessage-border);
    @{position}: -1 * @offset;
  }

  &::after {
    @{position}: -1 * (@offset - 1);
    border-@{direction}-color: var(--rs-form-errormessage-bg);
  }
}

.rs-form-error-message {
  --rs-form-errormessage-font-size: var(--rs-font-size-xs);
  --rs-form-errormessage-line-height: 1.25rem;
  --rs-form-errormessage-triangle-vertical: 4px;
  --rs-form-errormessage-triangle-gap: 10px;


  position: absolute;
  padding: 3px 7px;
  background-color: var(--rs-form-errormessage-bg);
  border: 1px solid var(--rs-form-errormessage-border);
  border-radius: var(--rs-radius-md);
  filter: ~'drop-shadow(0 0 6px rgba(0,0,0,.1))';
  z-index: var(--rs-zindex-form-error-message);
  color: var(--rs-form-errormessage-text);
  font-size: var(--rs-form-errormessage-font-size);
  line-height: var(--rs-form-errormessage-line-height);
  display: none;
  white-space: nowrap;

  &-show {
    display: block;
    animation-duration: 0.3s;
    animation-timing-function: ease-out;
  }

  &-arrow {
    .arrow-base();
  }
}

.rs-form-error-message-wrapper {
  position: absolute;

  &[data-placement='static'] {
    --rs-form-errormessage-text: var(--rs-color-red);
    --rs-form-errormessage-bg: transparent;

    position: static;
    margin-top: var(--rs-spacing);
    display: block;
    width: 100%;

    .rs-form-error-message {
      position: static;
      display: block;
      width: 100%;
      white-space: normal;
      word-wrap: break-word;
      padding: 0;
      filter: none;
      border: none;
      border-radius: 0;

      &-show {
        animation: none;
      }

      &-arrow {
        display: none;
      }
    }
  }

  // Vertical placements (top/bottom)
  &:where([data-placement='bottom-start'], [data-placement='bottom-end']) {
    bottom: 0;

    .rs-form-error-message {
      top: 0;
      &-show {
        animation-name: errorMessageSlideDownIn;
      }
    }

    .rs-form-error-message-arrow {
      .arrow-border(bottom, 0, 6px, 6px, top, 6px);
    }
  }

  &:where([data-placement='top-start'], [data-placement='top-end']) {
    top: 0;

    .rs-form-error-message {
      bottom: 0;
      &-show {
        animation-name: errorMessageSlideUpIn;
      }
    }

    .rs-form-error-message-arrow {
      .arrow-border(top, 6px, 6px, 0, bottom, 6px);
    }
  }

  // Inline start/end positions
  &:where([data-placement='bottom-start'], [data-placement='top-start']) {
    inset-inline-start: 0;
    .rs-form-error-message {
      inset-inline-start: 0;
    }
    .rs-form-error-message-arrow {
      .arrow-position(inset-inline-start, var(--rs-form-errormessage-triangle-gap));
    }
  }

  &:where([data-placement='bottom-end'], [data-placement='top-end']) {
    inset-inline-end: 0;
    .rs-form-error-message {
      inset-inline-end: 0;
    }
    .rs-form-error-message-arrow {
      .arrow-position(inset-inline-end, var(--rs-form-errormessage-triangle-gap));
    }
  }

  .horizontal-arrow-styles(@direction, @opposite) {
    @{direction}: 0;

    .rs-form-error-message {
      @{opposite}: 0;
      &-show {
        animation-name: if(@direction = left, errorMessageSlideRightIn, errorMessageSlideLeftIn);
      }
    }

    .rs-form-error-message-arrow {
      &::before,
      &::after {
        border-width: 6px
          if(@direction = left, 0 6px 6px, 6px 6px 0);
        border-@{direction}-color: var(--rs-form-errormessage-border);
        @{opposite}: -6px;
      }
      &::after {
        @{opposite}: -5px;
        border-@{direction}-color: var(--rs-form-errormessage-bg);
      }
    }
  }

  .vertical-alignment-styles(@position) {
    @{position}: 0;
    .rs-form-error-message {
      @{position}: 0;
    }
    .rs-form-error-message-arrow {
      &::before,
      &::after {
        @{position}: var(--rs-form-errormessage-triangle-vertical);
      }
    }
  }

  /* rtl:begin:ignore */
  // Horizontal placements (left/right)
  &:where([data-placement='left-start'], [data-placement='left-end']) {
    .horizontal-arrow-styles(left, right);
  }

  &:where([data-placement='right-start'], [data-placement='right-end']) {
    .horizontal-arrow-styles(right, left);
  }

  // Vertical alignment for horizontal placements
  &:where([data-placement='left-start'], [data-placement='right-start']) {
    .vertical-alignment-styles(top);
  }

  &:where([data-placement='left-end'], [data-placement='right-end']) {
    .vertical-alignment-styles(bottom);
  }
  /* rtl:end:ignore */
}
