@import '../../style/common';
@import '../../Checkbox/style/mixin';
@import '../../TreePicker/style/mixin';

// Check Tree Picker
// ----------------------

// Check tree picker name space
@ctpns: ~'@{ns}@{check-tree-picker-prefix}';

.@{ctpns} {
  background-color: @picker-tree-bg;
  max-height: 360px;
  height: 100%;
  overflow-y: auto;

  /* stylelint-disable-next-line */ // This class name provide by Virtualized.
  .ReactVirtualized__Grid.ReactVirtualized__List:focus {
    outline: none;
  }
}

.@{ctpns}-node {
  position: relative;
  font-size: @picker-tree-node-font-size;
  line-height: @picker-tree-node-line-height;

  > .@{ctpns}-node-label {
    margin: 0;
    //padding-left: 16px;
    padding: @picker-tree-node-padding-vertical @picker-tree-node-padding-horizontal;
    //text gap + checkbox space
    padding-left: 58px; // 10px + 36px + 12px
    display: inline-block;
    cursor: pointer;
    position: relative;

    // Only has the first level
    .without-children & {
      padding-left: 34px; //text gap + checkbox space

      &::before {
        width: 28px;
        margin-left: -36px;
      }

      .@{ctpns}-node-input-wrapper {
        left: 0;
      }
    }

    &::before {
      content: '';
      position: absolute;
      width: @picker-tree-arrow-down-width+ @picker-tree-arrow-down-gap + 30px; // checkbox-spacing = 30
      height: 100%;
      background-color: @picker-tree-bg;
      top: 0;
      margin-left: -58px; // 10px + 36px + 12px
    }

    &-active > .@{ctpns}-node-label,
    &:focus,
    &:hover {
      background-color: @picker-tree-node-hover-bg;
    }
  }

  // Uncheckable state
  &-all-uncheckable > .@{ctpns}-node-label {
    padding-left: 22px; // 10px + 12px

    &::before {
      width: 14px;
      margin-left: 0;
      left: 0;
    }
  }

  &-disabled {
    color: @picker-menu-item-disabled-color;
    cursor: @cursor-disabled;

    > .@{ctpns}-node-label {
      cursor: @cursor-disabled;

      &,
      &:hover {
        background: transparent;
      }
    }
  }

  &:not(&-disabled):focus > .@{ctpns}-node-label {
    background-color: @picker-tree-node-hover-bg;
  }
}

// Checkbox
.@{ctpns}-node-input-wrapper {
  position: absolute;
  width: @checkbox-width-height;
  height: @checkbox-width-height;
  display: inline-block;
  left: @checkbox-sense-width+10px;
  top: @checkbox-sense-width;

  [type='checkbox'] {
    display: none;
  }

  &::before,
  &::after,
  .@{ctpns}-node-inner::before,
  .@{ctpns}-node-inner::after {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    display: block;
  }

  &::before,
  .@{ctpns}-node-inner::before,
  .@{ctpns}-node-inner::after {
    width: @checkbox-width-height;
    height: @checkbox-width-height;
  }

  // Sensing field
  &::after {
    top: -@checkbox-sense-width;
    right: -@checkbox-sense-width;
    bottom: -@checkbox-sense-width;
    left: -@checkbox-sense-width;
  }

  // Frame
  .@{ctpns}-node-inner::before {
    .checkbox-inner-wrap(@checkbox-default-border-color);

    .@{ctpns}-node-disabled & {
      border-color: @checkbox-disabled-color;
      background-color: @checkbox-disabled-color;
    }

    .@{ctpns}-node-indeterminate &,
    .@{ctpns}-node-checked & {
      border-color: @checkbox-checked-border-color;
      background-color: @checkbox-checked-border-color;
    }

    .@{ctpns}-node-disabled.@{ctpns}-node-indeterminate &,
    .@{ctpns}-node-disabled.@{ctpns}-node-checked &,
    .@{ctpns}-node-disabled.@{ns}picker-check-menu-item-active & {
      opacity: 0.3;
    }
  }

  // check mark
  .@{ctpns}-node-inner::after {
    opacity: 0;
    transform: rotate(45deg) scale(0);

    .@{ctpns}-node-checked & {
      border: solid @B000;
      width: 6px;
      height: 9px;
      margin-top: 2px;
      margin-left: 5px;
      opacity: 1;
      border-width: 0 2px 2px 0;
      transform: rotate(45deg) scale(1);
    }

    .@{ctpns}-node-indeterminate & {
      opacity: 1;
      border: solid @B000;
      height: 9px;
      border-width: 0 0 2px;
      transform: rotate(0deg) scale(1);
      width: 10px;
      margin-top: 0;
      margin-left: 3px;
    }
  }

  // :Focus
  &:focus {
    outline: none;

    .@{ctpns}-node-inner::before {
      .checkbox-inner-active-shadow(@checkbox-default-border-color);

      @hover: ~':hover';

      @{hover}& {
        .checkbox-inner-active-shadow(@checkbox-checked-border-color);
      }

      .@{ns}checkbox-checked & {
        .checkbox-inner-active-shadow(@checkbox-checked-border-color);
      }
    }
  }
}

// expand icon
.@{ctpns}-node-expand-icon-wrapper {
  display: inline-block;
  position: absolute;
  cursor: pointer;
  z-index: 1;

  > .@{ctpns}-node-expand-icon {
    display: inline-block;
    padding: @picker-tree-node-padding-vertical 0;
    padding-right: @picker-tree-arrow-down-gap;
    height: 36px;
    font-size: @picker-tree-node-font-size;
    line-height: @picker-tree-node-line-height;
    transform: rotate(-90deg);
    transform-origin: 3.5px 16px;
    margin-left: -2px;
    margin-top: 2px;
    font-family: @font-family-icon;
    font-style: normal;
    user-select: none;

    &::before {
      content: @picker-tree-arrow-down;
    }

    // expand children tree
    .@{ctpns}-open > .@{ctpns}-node & {
      transform: rotate(0deg);
      margin-left: 0;
      margin-top: 0;
    }
  }

  > .@{ctpns}-node-expanded {
    transform: rotate(0deg);
    margin-left: 0;
    margin-top: 0;
  }

  > .@{ctpns}-node-custom-icon {
    .node-item-prepend-icon;
  }
}

// node children
.@{ctpns}-node-children {
  > .@{ctpns}-children {
    display: none;

    .@{ctpns}-open& {
      display: block;
    }
  }
}

.@{ns}picker-menu {
  &.@{ctpns}-menu {
    padding-top: @picker-menu-padding;

    .@{ns}picker-search-bar {
      padding-top: 0;
    }
  }

  .@{ctpns} {
    padding: 0 @picker-menu-padding @picker-menu-padding 0;

    &-node > .@{ctpns}-node-label {
      .ellipsis;

      display: block;
    }
  }
}
