@use '../../internals/Box/styles/index' as box;
@use '../../styles/variables' as vars;

// Mixin for generating responsive direction classes
@mixin responsive-direction($size) {
  &-#{$size}-column {
    flex-direction: column;
  }
  &-#{$size}-row {
    flex-direction: row;
  }
  &-#{$size}-column-reverse {
    flex-direction: column-reverse;
  }
  &-#{$size}-row-reverse {
    flex-direction: row-reverse;
  }
}

.rs-stack {
  --rs-stack-spacing: calc(var(--rs-spacing) * 1.5);
  --rs-stack-wrap: nowrap;
  --rs-stack-direction: row;
  --rs-stack-align: center;
  --rs-stack-justify: flex-start;

  display: flex;
  gap: var(--rs-stack-spacing);
  flex-wrap: var(--rs-stack-wrap);
  flex-direction: var(--rs-stack-direction);
  align-items: var(--rs-stack-align);
  justify-content: var(--rs-stack-justify);

  &-column {
    flex-direction: column;
  }

  &-row {
    flex-direction: row;
  }

  &-column-reverse {
    flex-direction: column-reverse;
  }

  &-row-reverse {
    flex-direction: row-reverse;
  }

  @include responsive-direction(xs);

  // Small grid
  //
  // Columns, offsets, pushes, and pulls for the small device range, from phones
  // to tablets / phones.

  @media (min-width: vars.$screen-sm) {
    @include responsive-direction(sm);
  }

  @media (min-width: vars.$screen-md) {
    @include responsive-direction(md);
  }

  @media (min-width: vars.$screen-lg) {
    @include responsive-direction(lg);
  }

  @media (min-width: vars.$screen-xl) {
    @include responsive-direction(xl);
  }

  @media (min-width: vars.$screen-xxl) {
    @include responsive-direction(xxl);
  }
}

.rs-stack-item {
  align-self: var(--rs-stack-item-align-self);
  order: var(--rs-stack-item-order);
  flex: var(--rs-stack-item-flex);
  flex-grow: var(--rs-stack-item-grow);
  flex-shrink: var(--rs-stack-item-shrink);
  flex-basis: var(--rs-stack-item-flex-basis);
}
