# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - main
      - next
      - v4
      - '*.x'
  pull_request:
    branches:
      - main
      - next
      - v4
      - '*.x'

jobs:
  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - run: npm ci --legacy-peer-deps
      - run: npm run format:check
      - run: npm run lint

  test:
    name: 'Test'

    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chromium, firefox]
        react: ['React18', 'React19']

    steps:
      - uses: actions/checkout@v4

      - name: Setup kernel, increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Free disk space on runner
        if: runner.os == 'Linux' # ubuntu-latest is Linux
        run: |
          echo "Initial disk space:"
          df -h
          sudo rm -rf /usr/share/dotnet || echo "Failed to remove dotnet or it doesn't exist"
          sudo rm -rf /opt/ghc || echo "Failed to remove ghc or it doesn't exist"
          sudo rm -rf /usr/local/lib/android || echo "Failed to remove android or it doesn't exist"
          sudo apt-get clean || echo "apt-get clean failed"
          echo "Disk space after cleanup:"
          df -h

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: install react 18
        if: ${{ matrix.react == 'React18' }}
        run: npm run install:react-18

      - name: install react 19
        if: ${{ matrix.react == 'React19' }}
        run: npm run install:react-19

      - name: Run headless tests
        run: npm run test:ci --browser.name=${{ env.BROWSER }} --browser.headless --no-file-parallelism --browser.fileParallelism=false --maxConcurrency=1 --bail=1 --reporter=verbose --printConsoleTrace
        env:
          CI: true
          BROWSER: ${{ matrix.browser }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.2.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.browser }}
